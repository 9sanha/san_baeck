# 문제
# 0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.
#
# 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
#
# 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
#
# N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
#
# 입력
# 첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.
#
# 출력
# 첫째 줄에 N의 사이클 길이를 출력한다.

def limite_sum(n1,limite_num=99):
    if (n1>limite_num or n1<1):
        print('입력오류 : 입력한 숫자가 입력 범위를 벗어났습니다.(입력범위:1~',limite_num,')')
    else:
        return True

n = input('숫자를 입력하세요: ')
if(limite_sum(int(n))):
    a=n # 마지막 확인용 변수
    count=0 #원래 수로 돌아오기까지 몇번 계산했는지 카운트
    while(True):
        sum=str(int(a[0])+int(a[1]))
        if(int(sum)<10): #한 자리 수 일때
            sum='0'+sum
        a=a[1]+sum[1]
        count+=1
        if(a==n):
            print(count)
            exit(0)



